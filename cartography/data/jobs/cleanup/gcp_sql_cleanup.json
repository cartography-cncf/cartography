{
    "statements": [
        {
            "query": "MATCH (u:GCPSQLUser)<-[:USED_BY]-(:GCPSQLInstance)<-[:RESOURCE]-(:GCPProject{id: {GCP_PROJECT_ID}}) WHERE u.lastupdated <> {UPDATE_TAG} WITH u LIMIT {LIMIT_SIZE} DETACH DELETE (u) return COUNT(*) as TotalCompleted",
            "iterative": true,
            "iterationsize": 100,
            "__comment__": "Delete GCP Cloud SQL Users that no longer exist and detach them from all previously connected nodes."
        },
        {
            "query": "MATCH (:GCPSQLUser)<-[r:USED_BY]-(:GCPSQLInstance)<-[:RESOURCE]-(:GCPProject{id: {GCP_PROJECT_ID}}) WHERE r.lastupdated <> {UPDATE_TAG} WITH r LIMIT {LIMIT_SIZE} DELETE (r) return COUNT(*) as TotalCompleted",
            "iterative": true,
            "iterationsize": 100,
            "__comment__": "Remove GCP GCPSQLUser-to-Instance relationships that are out of date."
        },
        {
            "query": "MATCH (n:GCPSQLInstance)<-[:RESOURCE]-(:GCPProject{id: {GCP_PROJECT_ID}}) WHERE n.lastupdated <> {UPDATE_TAG} WITH n LIMIT {LIMIT_SIZE} DETACH DELETE (n) return COUNT(*) as TotalCompleted",
            "iterative": true,
            "iterationsize": 100,
            "__comment__": "Delete GCP Cloud SQL Instance that no longer exist and detach them from all previously connected nodes."
        },
        {
            "query": "MATCH (:GCPSQLInstance)<-[r:RESOURCE]-(:GCPProject{id: {GCP_PROJECT_ID}}) WHERE r.lastupdated <> {UPDATE_TAG} WITH r LIMIT {LIMIT_SIZE} DELETE (r) return COUNT(*) as TotalCompleted",
            "iterative": true,
            "iterationsize": 100,
            "__comment__": "Remove GCP GCPSQLInstance-to-Project relationships that are out of date."
        }
    ],
    "name": "Cleanup GCP Cloud SQL."
}
