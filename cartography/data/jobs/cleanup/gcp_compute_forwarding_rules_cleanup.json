{
	"statements": [
		{
			"query": "MATCH (n:GCPForwardingRule)<-[:RESOURCE]-(:GCPSubnet)<-[:RESOURCE]-(:GCPVpc)<-[:RESOURCE]-(:GCPProject{id: {GCP_PROJECT_ID}}) WHERE n.lastupdated <> {UPDATE_TAG} WITH n LIMIT {LIMIT_SIZE} DETACH DELETE (n) return COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 100,
			"__comment__": "Remove GCP Subnetwork-to-Forwarding Rules relationships that are out of date."
		},
		{
			"query": "MATCH (n:GCPForwardingRule)<-[r:RESOURCE]-(:GCPSubnet)<-[:RESOURCE]-(:GCPVpc)<-[:RESOURCE]-(:GCPProject{id: {GCP_PROJECT_ID}}) WHERE n.lastupdated <> {UPDATE_TAG} WITH n LIMIT {LIMIT_SIZE} DELETE (n) return COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 100,
			"__comment__": "Remove GCP Subnetwork-to-Forwarding Rules relationships that are out of date."
		},
		{
			"query": "MATCH (n:GCPForwardingRule)<-[:RESOURCE]-(:GCPVpc)<-[r:RESOURCE]-(:GCPProject{id: {GCP_PROJECT_ID}}) WHERE n.lastupdated <> {UPDATE_TAG} WITH n LIMIT {LIMIT_SIZE} DETACH DELETE (n) return COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 100,
			"__comment__": "Delete GCP Forwarding Rules that no longer exist and detach them from all previously connected nodes."
		},
		{
			"query": "MATCH (n:GCPForwardingRule)<-[:RESOURCE]-(:GCPVpc)<-[:RESOURCE]-(:GCPProject{id: {GCP_PROJECT_ID}}) WHERE n.lastupdated <> {UPDATE_TAG} WITH n LIMIT {LIMIT_SIZE} DELETE (n) return COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 100,
			"__comment__": "Remove GCP VPC-to-Forwarding Rules relationships that are out of date."
		}
	],
	"name": "cleanup GCP Forwarding Rules"
}
