{

    "bigfix": {
        "nodes": {
            "BigFixComputer": {
                "hostname": "computername",
                "os": "os"
            }
        }
    },
    "crowdstrike": {
        "nodes": {
            "CrowdstrikeHost": {
                "hostname": "hostname",
                "os_version": "os_version",
                "platform": "platform_name",
                "model": "model",
                "serial_number": "serial_number",
                "instance_id": "instance_id"
            }
        }
    },
    "duo": {
        "nodes": {
            "DuoEndpoint": {
                "hostname": "device_name",
                "os": "os_family",
                "os_version": "os_version",
                "model": "model"
            },
            "DuoPhone": {
                "hostname": "name",
                "os_version": "os_version",
                "model": "model",
                "platform": "platform"
            }
        },
        "rels": [
            {
                "__comment__": "Link Device to User based on DuoUser-DuoPhone relationship",
                "query": "MATCH (u:User)-[:HAS_ACCOUNT]->(:DuoUser)-[:HAS_DUO_PHONE]-(:DuoPhone)<-[:HAS_OBSERVATION]-(d:Device) MERGE (u)-[r:OWNS]->(d) ON CREATE SET r.firstseen = timestamp() SET r.lastupdated = $UPDATE_TAG",
                "iterative": false
            },
            {
                "__comment__": "Link Device to User based on DuoUser-DuoEndpoint relationship",
                "query": "MATCH (u:User)-[:HAS_ACCOUNT]->(:DuoUser)-[:HAS_DUO_ENDPOINT]-(:DuoEndpoint)<-[:HAS_OBSERVATION]-(d:Device) MERGE (u)-[r:OWNS]->(d) ON CREATE SET r.firstseen = timestamp() SET r.lastupdated = $UPDATE_TAG",
                "iterative": false
            }
        ]
    },
    "kandji": {
        "nodes": {
            "KandjiDevice": {
                "hostname": "device_name",
                "serial_number": "serial_number",
                "os_version": "os_version",
                "model": "model",
                "platform": "platform"
            }
        }
    },
    "snipeit": {
        "nodes": {
            "SnipeitAsset": {
                "hostname": "name",
                "serial_number": "serial",
                "model": "model"
            }
        },
        "rels": [
            {
                "__comment__": "Link Device to User based on SnipeitUser-SnipeitAsset relationship",
                "query": "MATCH (u:User)-[:HAS_ACCOUNT]->(:SnipeitUser)-[:HAS_CHECKED_OUT]-(:SnipeitAsset)<-[:HAS_OBSERVATION]-(d:Device) MERGE (u)-[r:OWNS]->(d) ON CREATE SET r.firstseen = timestamp() SET r.lastupdated = $UPDATE_TAG",
                "iterative": false
            }
        ]
    },
    "tailscale": {
        "nodes": {
            "TailscaleDevice": {
                "hostname": "hostname",
                "os": "os"
            }
        },
        "rels": [
            {
                "__comment__": "Link Device to User based on TailscaleUser-TailscaleDevice relationship",
                "query": "MATCH (u:User)-[:HAS_ACCOUNT]->(:TailscaleUser)-[:OWNS]-(:TailscaleDevice)<-[:HAS_OBSERVATION]-(d:Device) MERGE (u)-[r:OWNS]->(d) ON CREATE SET r.firstseen = timestamp() SET r.lastupdated = $UPDATE_TAG",
                "iterative": false
            }
        ]
    }
}
